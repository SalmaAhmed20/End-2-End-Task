apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "mysql"
  labels:
    app: "mysql"
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-cache-enable: "true"
    vault.hashicorp.com/agent-inject-secret-mysql_root_pass: "secret/mysql_root_pass"
    vault.hashicorp.com/role: "read_mysql_root"
spec:
  serviceName: mysql-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      serviceAccountName: mysql
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: secret/mysql_root_pass#mysqlRootPassword
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "{{ .Values.persistence.accessMode }}" ]
        storageClassName: "{{ .Values.persistence.storageClass }}"
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql
