trigger:
  branches:
    include:
      - main
pool: newPool
stages:
  - stage: "prepare_Env"
    jobs:
    
      - job: prepare_ENV
        steps:
          - checkout: self
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                export AWS_ACCESS_KEY_ID = $(AWS_ACCESS_KEY_ID)
                export AWS_SECRET_ACCESS_KEY = $(AWS_SECRET_ACCESS_KEY)
                export REGION = $(REGION)
                export CLUSTER_NAME= $(CLUSTER_NAME)
  - stage: "Initialize"
    displayName: "Initialize Terraform"
    jobs:
      - job: "Initialize"
        displayName: "Initialize Terraform"
        steps:
          - checkout: self
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

  - stage: "Plan"
    displayName: "Terraform Plan"
    dependsOn: "Initialize"
    jobs:
      - job: "Plan"
        displayName: "Terraform Plan"
        steps:
          - checkout: self
         
          - task: TerraformTaskV4@4
            inputs:
              provider: 'aws'
              command: 'init'
              backendServiceAWS: 'new'
              backendAWSBucketName: 'helm-aws'
              backendAWSKey: 'terraform.tfstate'
            displayName: "Terraform Init"
          - task: TerraformTaskV4@4
            inputs:
              provider: 'aws'
              command: 'plan'
              backendAWSBucketName: 'helm-aws'
              backendServiceAWS: 'new'
              backendAWSKey: 'terraform.tfstate'
              environmentServiceNameAWS: 'new'
  - stage: Approval
    displayName: 'Approval'
    jobs:
    - job: ApprovalJob
      pool: server
      displayName: 'Approval Job'
      steps:
      - task: ManualValidation@0
        displayName: 'Manual Approval'
        condition: succeeded()
        inputs:
          notifyUsers: eng.salma.ahmed.anees@gmail.com
          instructions: 'Please review the Terraform plan and approve or reject the deployment.'

  - stage: "Apply"
    displayName: "Terraform Apply"
    dependsOn: "Approval"
    jobs:
      - job: "Apply"
        displayName: "Terraform Apply"
        steps:
          - checkout: self
          - task: TerraformTaskV4@4
            inputs:
              provider: aws
              backendAWSBucketName: 'helm-aws'
              backendAWSKey: 'terraform.tfstate'
              backendServiceAWS: 'new'
              command: 'init'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'aws'
              command: 'apply'
              backendAWSBucketName: 'helm-aws'
              backendAWSKey: 'terraform.tfstate'
              commandOptions: '-auto-approve'
              environmentServiceNameAWS: 'new'
